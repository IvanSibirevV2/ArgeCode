using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace System.VConsole
{
    /// <summary>
    /// Интерфейс для объектов, которые способны быть введены с консоли нативным способом.
    /// Можно реализовать на System.Console
    /// Рекомендуется реализовать на System.VConsole.Config.p_VirtualConsole
    /// Запрет на реализацию через"".Get__ReadLine<T>() - вероятно будет зацикливание
    /// </summary>
    public interface IReadLineEable
    {
        System.Object Get_ReadLine();
    }
    public static class Ext_Get_ReadLine
    {
        public static System.Boolean Get_ReadLine(this System.Boolean _this)
        {
            switch (System.VConsole.Config.p_VirtualConsole.ReadLine())
            {
                case "0": return false; break;
                case "False": return false; break;
                case "false": return false; break;
                case "1": return true; break;
                case "True": return true; break;
                case "true": return true; break;
                default: return false; break;
            }
            return _this;
        }
        public static System.Byte Get_ReadLine(this System.Byte _this)
        {
            System.Byte rez = 0;
            while (System.Byte.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Char Get_ReadLine(this System.Char _this)
        {
            System.Char rez = ' ';
            while (System.Char.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Decimal Get_ReadLine(this System.Decimal _this)
        {
            System.Decimal rez = 0;
            while (System.Decimal.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Double Get_ReadLine(this System.Double _this)
        {
            System.Double rez = 0;
            while (System.Double.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Int16 Get_ReadLine(this System.Int16 _this)
        {
            System.Int16 rez = 0;
            while (System.Int16.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Int32 Get_ReadLine(this System.Int32 _this)
        {
            System.Int32 rez = 0;
            while (System.Int32.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Int64 Get_ReadLine(this System.Int64 _this)
        {
            System.Int64 rez = 0;
            while (System.Int64.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.SByte Get_ReadLine(this System.SByte _this)
        {
            System.SByte rez = 0;
            while (System.SByte.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.Single Get_ReadLine(this System.Single _this)
        {
            System.Single rez = 0;
            while (System.Single.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.String Get_ReadLine(this System.String _this) { return System.VConsole.Config.p_VirtualConsole.ReadLine(); }
        public static System.UInt16 Get_ReadLine(this System.UInt16 _this)
        {
            System.UInt16 rez = 0;
            while (System.UInt16.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.UInt32 Get_ReadLine(this System.UInt32 _this)
        {
            System.UInt32 rez = 0;
            while (System.UInt32.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
        public static System.UInt64 Get_ReadLine(this System.UInt64 _this)
        {
            System.UInt64 rez = 0;
            while (System.UInt64.TryParse(System.VConsole.Config.p_VirtualConsole.ReadLine(), out rez)
                .SetIf(_fBool: a => a = true, _f0: a => ("Сan't convert to " + _this.GetType().ToString() + "; Try again !!").WriteLine()).Get(a => !a)
            ) ;
            return rez;
        }
    }
}
